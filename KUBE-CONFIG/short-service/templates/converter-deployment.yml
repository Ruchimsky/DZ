apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.converter.name }}-deployment
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.converter.replicas }}
  selector:
    matchLabels:
      components: {{ .Values.converter.backend2 }}
  template:
    metadata:
      labels:
        components: {{ .Values.converter.backend2 }}
    spec:
      containers:
        - name: {{ .Values.converter.name }}
          image: "{{ .Values.converter.image }}:{{ .Values.converter.version }}"
          ports:
            - containerPort: {{ .Values.converter.containerport }}
          resources:
            limits: {{ .Values.converter.limits | toYaml | nindent 14 }}
          env:
            - name: AMQP_USER
              valueFrom:
                secretKeyRef:
                  name: conv-secrets
                  key: AMQP_USER
            - name: AMQP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: conv-secrets
                  key: AMQP_PASSWORD
            - name: AMQP_HOSTNAME
              value: rabbitmq-clusterip
            - name: AMQP_EXCHANGE
              value: exchanger
            - name: AMQP_QUEUE
              value: converter
            
            - name: RABBITMQ_URL
              valueFrom:
                secretKeyRef:
                  name: conv-secrets
                  key: RABBITMQ_URL

          volumeMounts:
            - name: uploads-volume
              mountPath: /opt/app/uploads
      volumes:
        - name: uploads-volume
          persistentVolumeClaim:
            claimName: uploads-pvc

# DATABASE_URL
# postgres://user:password@url:5432/db
# postgresql://demo:demo@postgres-clusterip:5432/demo

# RABBIT_URL
# amqp://username:password@host:port
# amqp://demo:demo@rabbitmq-clusterip:5672